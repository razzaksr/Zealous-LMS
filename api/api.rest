### admin controller apis

GET http

### user apis

GET http://localhost:5000/users/getAllUsers

###

POST http://localhost:5000/users/addUser
Content-Type: application/json

{
  "username": "Vijay12345",
  "email": "vijayaprakash1709@gmail.com",
  "password": "Vijay@123",
  "role": "admin",
  "created_at": "2024-10-07T10:30:00Z",
  "updated_at": "2024-10-07T10:30:00Z"
}

###

PUT http://localhost:5000/users/updateUser/6703b9aab42a232a9226e82d
Content-Type: application/json

{
  "username": "Vijay1234"
}

###

DELETE http://localhost:5000/users/deleteUser/67037dc49e4560fd9dc32e1b

################################################

### problem apis

GET http://localhost:5000/problems/getAllProblems

####

POST http://localhost:5000/problems/addProblem
Content-Type: application/json

{
    "title": "Sample  2",
    "description": "This is a sample problem description.",
    "difficulty": "medium",
    "input_format": "Input format goes here",
    "output_format": "Output format goes here",
    "sample_input": "Sample input goes here",
    "constraints": "Constraints go here",
    "time_limit": 2,
    "memory_limit": 256,
    "created_by": "6703b9aab42a232a9226e82d"
}

#####

PUT http://localhost:5000/problems/updateProblem/6704b6f34c9f4ebc5af72dcd
Content-Type: application/json

{
  "title": "Updated Problem"
}

###

DELETE http://localhost:5000/problems/deleteProblem/6704b6f34c9f4ebc5af72dcd

################################################
### Admin Dashboard Metrics
POST http://localhost:5000/adminMetrics/addMetric
Content-Type: application/json

{
  "user_id": "6703b9aab42a232a9226e82d",  
  "total_mcq_tests": 200,
  "total_coding_tests": 301,
  "average_score_mcq": 75.5,
  "average_score_coding": 82.3
}


### Read All Metrics
GET http://localhost:5000/adminMetrics/getAllMetrics

### Read Metric by ID
GET http://localhost:5000/adminMetrics/getMetricById/6704b8c33d43cce36f105252


#### Update Metric by ID
PUT http://localhost:5000/adminMetrics/updateMetric/6704b8c33d43cce36f105252
Content-Type: application/json

{
  "total_users":10
}

#### Delete Metric by ID
DELETE http://localhost:5000/adminMetrics/deleteMetric/6703bb48b42a232a9226e83f


#######################################################################
### CREATE Coding Test
POST http://localhost:5000/codingTests/addCodingTest
Content-Type: application/json

{
    "user_id": "6703b9aab42a232a9226e82d",
    "coding_title": "Sample Coding Test",
    "description": "This is a description of the coding test.",
    "testcase_id": 101
}

### READ All Coding Tests
GET http://localhost:5000/codingTests/getAllCodingTests

### READ Coding Test by ID
GET http://localhost:5000/codingTests/getCodingTestById/6704b8680fe7d132407cef49

### UPDATE Coding Test
PUT http://localhost:5000/codingTests/updateCodingTest/6704b8680fe7d132407cef49
Content-Type: application/json

{
    "coding_title": "Updated Coding Test Title",
    "description": "Updated description for the coding test.",
    "testcase_id": 102
}

### DELETE Coding Test
DELETE http://localhost:5000/codingTests/deleteCodingTest/6704b8680fe7d132407cef49

### CREATE Language
POST http://localhost:5000/languages/addLanguage
Content-Type: application/json

{
  "language_name": "Python",
  "compiler_version": "V3"
}

### READ All Languages
GET http://localhost:5000/languages/getAllLanguage

### READ Language by ID
GET http://localhost:5000/languages/getAllLanguage/6704ba464478bec1b2badaa1

### UPDATE Language
PUT http://localhost:5000/languages/updateLanguage/6704ba464478bec1b2badaa1
Content-Type: application/json

{
  "language_name": "Python",
  "compiler_version": "3.10"
}

### DELETE Language
DELETE http://localhost:5000/languages/deleteLanguage/6704ba464478bec1b2badaa1


### Leaderboards Routes

#### Create a Leaderboard Entry
POST http://localhost:5000/leaderboards/addLeaderBoard
Content-Type: application/json

{
  "leaderboard_id": 2,
  "user_id": 1001,
  "total_problems_solved": 50,
  "total_submissions": 200,
  "rating": 1500
}

#### Get All Leaderboard Entries
GET http://localhost:5000/leaderboards/getAllLeaderboards

#### Get Leaderboard Entry by ID
GET http://localhost:5000/leaderboards/getAllLeaderboards/6703e39c0ccac2099e69db91

#### Update Leaderboard Entry
PUT http://localhost:5000/leaderboards/updateLeaderboard/6703e39c0ccac2099e69db91
Content-Type: application/json

{
  "total_problems_solved": 75,
  "total_submissions": 250,
  "rating": 1600
}

#### Delete Leaderboard Entry
DELETE http://localhost:5000/leaderboards/deleteLeaderboard/6703e39c0ccac2099e69db91

### MCQ Questions Routes

#### Create a MCQ Question
POST http://localhost:5000/mcqQuestions/addMcqQuestion
Content-Type: application/json

{
  "test_id": "6704baf25edd518ff861102c",
  "question_text": "What is the capital of France?",
  "option_a": "Berlin",
  "option_b": "Madrid",
  "option_c": "Paris",
  "option_d": "Lisbon",
  "correct_option": "option_c"
}

#### Get All MCQ Questions
GET http://localhost:5000/mcqQuestions/getAllMcqQuestions

#### Get MCQ Question by ID
GET http://localhost:5000/mcqQuestions/getAllMcqQuestions/6703e4966d6e0e507df7ccad

#### Update MCQ Question
PUT http://localhost:5000/mcqQuestions/updateMcqQuestion/6703e4966d6e0e507df7ccad
Content-Type: application/json

{
  "question_text": "What is the capital of Germany?",
  "option_a": "Berlin",
  "option_b": "Munich",
  "option_c": "Frankfurt",
  "option_d": "Cologne",
  "correct_option": "option_a"
}

#### Delete MCQ Question
DELETE http://localhost:5000/mcqQuestions/deleteMcqQuestion/6703e4966d6e0e507df7ccad

### MCQ Tests Routes

#### Create a MCQ Test
POST http://localhost:5000/mcqTest/addMcqTest
Content-Type: application/json

{
  "title": "Python Basic",
  "description": "A test covering the basics of Java.",
  "created_by": "670404ff45b311a5dc5589e6"
}

#### Get All MCQ Tests
GET http://localhost:5000/mcqTest/getAllMcqTests

#### Get MCQ Test by ID
GET http://localhost:5000/mcqTest/getMcqTestById/6704bb165edd518ff8611030

#### Update MCQ Test
PUT http://localhost:5000/mcqTest/updateMcqTest/6704bb165edd518ff8611030
Content-Type: application/json

{
  "title": "Advanced JavaScript",
  "description": "A test covering advanced topics in JavaScript."
}

#### Delete MCQ Test
DELETE http://localhost:5000/mcqTest/deleteMcqTest/6704bb165edd518ff8611030


### Create a new submission
POST http://localhost:5000/submissions/addSubmission
Content-Type: application/json

{
    "user_id": "6703b9aab42a232a9226e82d",
    "problem_id": "67037dda9e4560fd9dc32e20",
    "code": "print('Hello World')",
    "language_id": "6703e1772f1b7a1e33ba7bbb",
    "submission_date": "2024-10-07T00:00:00Z",
    "status": "Pending",
    "execution_time": 100,
    "memory_usage": 256,
    "testcases_passed": 5,
    "total_testcases": 10
}


### Get all submissions
GET http://localhost:5000/submissions/getAllSubmission

### Get a submission by ID
GET http://localhost:5000/submissions/getSubmissionById/6704c9ed8e9e6bca1ba3267f 

### Update a submission
PUT http://localhost:5000/submissions/updateSubmission/6704c9ed8e9e6bca1ba3267f

{
    "language_id": "6703e1772f1b7a1e33ba7bbb",
    "submission_date": "2024-10-07T00:00:00Z",
    "status": "Pending",
    "execution_time": 200,
    "memory_usage": 256,
    "testcases_passed": 5,
    "total_testcases": 10
}

### Delete a submission
DELETE http://localhost:5000/submissions/deleteSubmission/6704c9ed8e9e6bca1ba3267f

#### Tags API

## Create Tag

POST http://localhost:5000/tags/addTags
Content-Type: application/json

{
    "tag_name": "Brute"
}

### Get All Tags
GET http://localhost:5000/tags/getAllTags

### Get Tag by ID
GET http://localhost:5000/tags/getTagsById/6703ed74a417a0189e6dded1

---

### Update Tag
PUT http://localhost:5000/tags/updateTags/6703ed74a417a0189e6dded1
Content-Type: application/json

{
    "tag_name":"Updated Tag Name"
}

### Delete Tag
DELETE http://localhost:5000/tags/deleteTags/6703ed74a417a0189e6dded1

### Create a Testcase
POST http://localhost:5000/testcases/addTestcase
Content-Type: application/json

{                              
    "problem_id": "67037dda9e4560fd9dc32e20",     
    "input": "Sample ",            
    "expected_output": "Expected output from the test", 
    "is_public": true                               
}
### Read All Testcases
GET http://localhost:5000/testcases/getAllTestcases

### Read Testcase by ID
GET http://localhost:5000/testcases/getTestcaseByID/6704ccb53b38f9d0071d05ac 

### Update a Testcase
PUT http://localhost:5000/testcases/updateTestcase/6704ccb53b38f9d0071d05ac

{
    "input": "Updated input for testing",            
    "expected_output": "Updated expected output",    
    "is_public": false                                
}

### Delete a Testcase
DELETE http://localhost:5000/testcases/deleteTestcase/6704ccb53b38f9d0071d05ac

### Create User Test Result
POST http://localhost:5000/userTestResults/addUserTestResults
Content-Type: application/json

{
    "user_id": "6703b9aab42a232a9226e82d",
    "test_id": "6703e5624039f028e0552adb",
    "score": 85.5
}

### Read All User Test Results
GET http://localhost:5000/userTestResults/getAllUserTestResults

### Read User Test Result by ID
GET http://localhost:5000/userTestResults/getUserTestResultById/670401a1503adba19f78c92f

#### Update User Test Result
PUT http://localhost:5000/userTestResults/updateUserTestResult/670401a1503adba19f78c92f
Content-Type: application/json

{
    "score": 90.0
}

#### Delete User Test Result
DELETE http://localhost:5000/userTestResults/deleteUserTestResult/670401a1503adba19f78c92f


### Register a New User
POST http://localhost:5000/auth/register
Content-Type: application/json

{
  "username": "newuser",
  "email": "newuser@example.com",
  "password": "newpassword123",
  "mobile": "9876543210"
}

### Login User
POST http://localhost:5000/auth/login
Content-Type: application/json

{
  "email": "newuser@example.com",
  "password": "newpassword123"
}

### Access Dashboard (Authenticated)
GET http://localhost:5000/dashboard
Content-Type: application/json

# Assuming you send credentials in the body, but this could be changed depending on your authentication mechanism
{
  "email": "newuser@example.com",
  "password": "newpassword123"
}

### Logout User (If you have a logout route)
POST http://localhost:5000/auth/logout
Content-Type: application/json

{
  "email": "newuser@example.com"
}

### Register User
POST http://localhost:5000/auth/register
Content-Type: application/json

{
  "username": "johndoe",
  "email": "johndoe@example.com",
  "password": "password123",
  "mobile": "1234567890"
}



############################################ After JWT Token Implementation ############################################
### Login User
POST http://localhost:5000/users/login
Content-Type: application/json

{
  "email": "vijayaprakash1709@gmail.com",
  "password": "Vijay@123"
}

### Example of a protected route using the token
GET http://localhost:5000/auth/profile
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzBiNDA4NjA1OWU0MGQzOTQ2Nzg2YTMiLCJ1c2VybmFtZSI6IlZpamF5MTIzNDUiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3Mjg5NzExOTQsImV4cCI6MTcyOTAwNzE5NH0.1PsUj7vfDrWvME75K4I3Ol-jcZHeWe08vnpNiuKZe3s

### Get all users (requires JWT)
GET http://localhost:5000/users/getAllUsers
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzBiNDA4NjA1OWU0MGQzOTQ2Nzg2YTMiLCJ1c2VybmFtZSI6IlZpamF5MTIzNDUiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3Mjg5NjU4MDYsImV4cCI6MTcyOTAwMTgwNn0.IDMwRBAZWoxuwlzYK9kNgELTYN-CIYWipYdE968d0Yk

###

### Get user by ID (requires JWT)
GET http://localhost:5000/users/getUserById/670b4086059e40d3946786a3
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzBiNDA4NjA1OWU0MGQzOTQ2Nzg2YTMiLCJ1c2VybmFtZSI6IlZpamF5MTIzNDUiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3Mjg5NjU4MDYsImV4cCI6MTcyOTAwMTgwNn0.IDMwRBAZWoxuwlzYK9kNgELTYN-CIYWipYdE968d0Yk

###

### Check if username exists
POST http://localhost:5000/users/check-username
Content-Type: application/json

{
  "username": "Vijay12345"
}

###

### Check if email exists
POST http://localhost:5000/users/check-email
Content-Type: application/json

{
  "email": "vijayaprakash885@gmail.com"
}

###

### Add a new user
POST http://localhost:5000/users/addUser
Content-Type: application/json

{
  "username": "new_user",
  "email": "new_user@example.com",
  "password": "password123",
  "role": "user",
  "status": "active",
  "mcqTestsAssigned": ["mcqTest1"],
  "codingTestsAssigned": ["codingTest1"]
}

###

### Update user by ID (requires JWT)
PUT http://localhost:5000/users/updateUser/670ded223fb760097d1959eb
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzBiNDA4NjA1OWU0MGQzOTQ2Nzg2YTMiLCJ1c2VybmFtZSI6IlZpamF5MTIzNDUiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3Mjg5NjU4MDYsImV4cCI6MTcyOTAwMTgwNn0.IDMwRBAZWoxuwlzYK9kNgELTYN-CIYWipYdE968d0Yk
Content-Type: application/json

{
  "username": "updated_username",
  "email": "updated_email@example.com",
  "password": "new_password",
  "role": "admin"
}

###

### Delete user by ID (requires JWT)
DELETE http://localhost:5000/users/deleteUser/670ded223fb760097d1959eb
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzBiNDA4NjA1OWU0MGQzOTQ2Nzg2YTMiLCJ1c2VybmFtZSI6IlZpamF5MTIzNDUiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE3Mjg5NjU4MDYsImV4cCI6MTcyOTAwMTgwNn0.IDMwRBAZWoxuwlzYK9kNgELTYN-CIYWipYdE968d0Yk

###

